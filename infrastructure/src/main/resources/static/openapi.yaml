openapi: 3.0.3
info:
  title: Debugattor API
  description: REST API for experiment execution tracking (executions → steps → artifacts)
  version: 0.1.0
servers:
  - url: http://localhost:8080
    description: Local
paths:
  /api/executions:
    post:
      summary: Start a new execution
      operationId: startExecution
      responses:
        '200':
          description: Execution started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
    get:
      summary: List executions
      operationId: listExecutions
      responses:
        '200':
          description: List of executions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Execution'
  /api/executions/{executionId}:
    get:
      summary: Get execution by id
      operationId: getExecutionById
      parameters:
        - in: path
          name: executionId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Execution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
        '404':
          description: Not found
  /api/executions/{executionId}/steps:
    post:
      summary: Register a step for an execution
      operationId: registerStep
      parameters:
        - in: path
          name: executionId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterStepRequest'
      responses:
        '200':
          description: Created step
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
        '404':
          description: Execution not found
  /api/executions/{executionId}/steps/{stepId}/artifacts:
    post:
      summary: Log an artifact for a step
      operationId: logArtifact
      parameters:
        - in: path
          name: executionId
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: stepId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogArtifactRequest'
      responses:
        '200':
          description: Created artifact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
        '404':
          description: Step or execution not found
components:
  schemas:
    Execution:
      type: object
      properties:
        id:
          type: string
          format: uuid
        steps:
          type: array
          items:
            $ref: '#/components/schemas/Step'
        startedAt:
          type: string
          format: date-time
        finishedAt:
          type: string
          format: date-time
          nullable: true
      required: [id, steps, startedAt]
    Step:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        status:
          $ref: '#/components/schemas/StepStatus'
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/Artifact'
          nullable: true
        registeredAt:
          type: string
          format: date-time
          nullable: true
        completedAt:
          type: string
          format: date-time
          nullable: true
      required: [id, name, status]
    Artifact:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          $ref: '#/components/schemas/ArtifactType'
        content:
          type: string
        loggedAt:
          type: string
          format: date-time
      required: [id, type, content]
    StepStatus:
      type: string
      enum: [RUNNING, COMPLETED, FAILED]
    ArtifactType:
      type: string
      enum: [IMAGE, LOG, JSON_DATA]
    RegisterStepRequest:
      type: object
      properties:
        name:
          type: string
      required: [name]
    LogArtifactRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ArtifactType'
        content:
          type: string
      required: [type, content]
