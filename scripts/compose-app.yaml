services:
  backend:
    build:
      context: ..
      dockerfile: scripts/Dockerfile.backend
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: debugattor
      DB_USERNAME: debugattor
      DB_PASSWORD: debugattor
      FLYWAY_ENABLED: true
      # MinIO (S3-compatible) for image artifacts
      MINIO_URL: http://minio:9000
      MINIO_PUBLIC_URL: http://localhost:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: artifacts
    depends_on:
      db:
        condition: service_healthy
      minio-setup:
        condition: service_completed_successfully

  frontend:
    build:
      context: ../ui
      dockerfile: Dockerfile
      args:
        VITE_API_BASE: http://localhost:8080/api
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
    depends_on:
      - backend

  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: debugattor
      POSTGRES_USER: debugattor
      POSTGRES_PASSWORD: debugattor
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U debugattor"]
      interval: 30s
      timeout: 10s
      retries: 3

  minio:
    image: quay.io/minio/minio
    restart: always
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  minio-setup:
    image: minio/mc
    restart: "no"
    depends_on:
      - minio
    entrypoint: ["/bin/sh","-c"]
    command:
      - >-
        set -e; echo "Waiting for MinIO to be ready..."; 
        until (/usr/bin/mc alias set local http://minio:9000 minioadmin minioadmin) >/dev/null 2>&1; do 
          sleep 2; 
        done; 
        echo "Creating bucket 'artifacts' if not exists..."; 
        /usr/bin/mc mb -p local/artifacts || true; 
        echo "Setting anonymous download policy on 'artifacts'..."; 
        /usr/bin/mc anonymous set download local/artifacts; 
        echo "MinIO setup complete."

volumes:
  db_data:
  minio_data:
